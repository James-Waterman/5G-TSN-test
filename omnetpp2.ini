[General]
network = TSN5G
#**.forwarding = true
*.*.macCellId = 1
*.*.masterId = 1
*.*.nrMacCellId = 1
*.*.nrMasterId = 1
#*.*.hasIncomingStreams = true
#*.*.hasOutgoingStreams = true
#**.hasTimeSynchronization = true
#**.tsnClock.clock.oscillator.typename = "RandomDriftOscillator"
#**.oscillator.changeInterval = 12.5ms
#**.oscillator.driftRate = uniform(-100ppm, 100ppm)
#**.oscillator.driftRateChange = uniform(-1ppm, 1ppm)
#**.oscillator.driftRateChangeUpperLimit = 100ppm
#**.oscillator.driftRateChangeLowerLimit = -100ppm
#
#*.tsnClock.gptp.masterPorts = ["eth0"]
#*.tsnSwitch.gptp.masterPorts = ["eth1", "eth2"]
#**.referenceClock = "tsnClock.clock"
#*.visualizer.typename = "IntegratedMultiCanvasVisualizer"
#*.visualizer.infoVisualizer[*].displayInfos = true
#
#*.visualizer.dataLinkVisualizer[0].displayLinks = true
#*.visualizer.dataLinkVisualizer[0].activityLevel = "protocol"
#*.visualizer.dataLinkVisualizer[0].packetFilter = "GptpSync"
#*.visualizer.dataLinkVisualizer[0].lineColor = "blue2"
#
#*.visualizer.numInfoVisualizers = 4
#*.visualizer.infoVisualizer[0].modules = "*.tsnClock.clock"
#*.tsnClock.clock.displayStringTextFormat = "time: %T"
#*.visualizer.infoVisualizer[1].modules = "*.tsnSwitch.clock"
#*.visualizer.infoVisualizer[1].placementHint = "topLeft"
#*.visualizer.infoVisualizer[2].modules = "*.tsnClient.clock"
#*.visualizer.infoVisualizer[2].placementHint = "bottom"
#*.visualizer.infoVisualizer[3].modules = "*.tsnServer.clock"
#*.visualizer.infoVisualizer[3].placementHint = "right"
#*.tsnClient.clock.displayStringTextFormat = "diff: %d"
#*.tsnServer.clock.displayStringTextFormat = "diff: %d"
#*.tsnSwitch.clock.displayStringTextFormat = "diff: %d"
#
#**.displayInterfaceTables = true
#
#*.visualizer.gateScheduleVisualizer[0].displayGateSchedules = true
#*.visualizer.gateScheduleVisualizer[0].gateFilter = "**.eth[1].**"
#*.visualizer.gateScheduleVisualizer[0].height = 16
#*.visualizer.gateScheduleVisualizer[0].placementHint = "top"

*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
*.visualizer.interfaceTableVisualizer.nodeFilter = "not (*switch* or *Switch*)"
*.tsnClient*.numApps = 1
*.tsnClient*.app[*].typename = "UdpSourceApp"
*.tsnClient1.app[0].display-name = "besteffort"
*.tsnClient*.app[*].io.destAddress = "tsnServer"
*.tsnClient1.app[0].io.destPort = 1000
*.tsnClient*.app[*].source.packetLength = 1000B - 54B # 42B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.tsnClient1.app[0].source.productionInterval = exponential(2000us) # ~40Mbps

# server applications
*.tsnServer.numApps = 2
*.tsnServer.app[*].typename = "UdpSinkApp"
*.tsnServer.app[0].display-name = "besteffort"
*.tsnServer.app[1].display-name = "video"
*.tsnServer.app[0].io.localPort = 1000
*.tsnServer.app[1].io.localPort = 1001
# enable outgoing streams
*.tsnClient*.hasOutgoingStreams = true

# enable incoming streams
*.tsnServer.hasIncomingStreams = true

# client stream identification
*.tsnClient*.bridging.streamIdentifier.identifier.mapping = [{stream: "besteffort", packetFilter: expr(udp.destPort == 1000)},
															{stream: "video", packetFilter: expr(udp.destPort == 1001)}]

# client stream encoding
*.tsnClient*.bridging.streamCoder.encoder.mapping = [{stream: "besteffort", pcp: 0},
													{stream: "video", pcp: 4}]

# switch stream decoding
*.tsnSwitch.bridging.streamCoder.decoder.mapping = [{pcp: 0, stream: "besteffort"},
                                                 {pcp: 4, stream: "video"}]
*.tsnSwitch.hasIngressTrafficFiltering = true
# per-stream filtering for video stream
*.tsnSwitch.bridging.streamFilter.ingress.typename = "SimpleIeee8021qFilter"
*.tsnSwitch.bridging.streamFilter.ingress.numStreams = 2
*.tsnSwitch.bridging.streamFilter.ingress.classifier.mapping = {video: 1,besteffort: 0}
*.tsnSwitch.bridging.streamFilter.ingress.*[1].display-name = "video"
*.tsnSwitch.bridging.streamFilter.ingress.*[0].display-name = "besteffort"
*.tsnSwitch.bridging.streamFilter.ingress.meter[*].typename = "EligibilityTimeMeter"
*.tsnSwitch.bridging.streamFilter.ingress.meter[*].committedInformationRate = 20Mbps
*.tsnSwitch.bridging.streamFilter.ingress.meter[*].committedBurstSize = 10kB
*.tsnSwitch.bridging.streamFilter.ingress.filter[*].typename = "EligibilityTimeFilter"



# enable egress traffic shaping
*.tsnSwitch.hasEgressTrafficShaping = true
*.tsnSwitch.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]
# credit-based and asynchronous traffic shaping
*.tsnSwitch.eth[*].macLayer.queue.numTrafficClasses = 2
*.tsnSwitch.eth[*].macLayer.queue.*[0].display-name = "besteffort"
*.tsnSwitch.eth[*].macLayer.queue.*[1].display-name = "video"
*.tsnSwitch.eth[*].macLayer.queue.queue[0].typename = "EligibilityTimeQueue"
*.tsnSwitch.eth[*].macLayer.queue.queue[1].typename = "EligibilityTimeQueue"
*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qAsynchronousShaper"
#*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[0].idleSlope = 42.68Mbps
*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].typename = "Ieee8021qAsynchronousShaper"
#*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].idleSlope = 21.34Mbps

#*.tsnClient*.numApps = 2
#*.tsnClient*.app[*].typename = "UdpSourceApp"
#*.tsnClient*.app[0].display-name = "besteffort"
#*.tsnClient*.app[1].display-name = "video"
#*.tsnClient*.app[*].io.destAddress = "tsnServer"
#*.tsnClient*.app[0].io.destPort = 1000
#*.tsnClient*.app[1].io.destPort = 1001
#*.tsnClient*.app[*].source.packetLength = 1000B - 54B # 42B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
#*.tsnClient*.app[0].source.productionInterval = exponential(200us) # ~40Mbps
#*.tsnClient*.app[1].source.productionInterval = exponential(400us)
#
## server applications
#*.tsnServer.numApps = 2
#*.tsnServer.app[*].typename = "UdpSinkApp"
#*.tsnServer.app[0].display-name = "besteffort"
#*.tsnServer.app[1].display-name = "video"
#*.tsnServer.app[0].io.localPort = 1000
#*.tsnServer.app[1].io.localPort = 1001
## enable outgoing streams
#*.tsnClient*.hasOutgoingStreams = true
#
## enable incoming streams
#*.tsnServer.hasIncomingStreams = true
#
## client stream identification
#*.tsnClient*.bridging.streamIdentifier.identifier.mapping = [{stream: "besteffort", packetFilter: expr(udp.destPort == 1000)},
#															{stream: "video", packetFilter: expr(udp.destPort == 1001)}]
#
## client stream encoding
#*.tsnClient*.bridging.streamCoder.encoder.mapping = [{stream: "besteffort", pcp: 0},
#													{stream: "video", pcp: 4}]
#
## switch stream decoding
#*.tsnSwitch.bridging.streamCoder.decoder.mapping = [{pcp: 0, stream: "besteffort"},
#                                                 {pcp: 4, stream: "video"}]
#*.tsnSwitch.hasIngressTrafficFiltering = true
## per-stream filtering for video stream
#*.tsnSwitch.bridging.streamFilter.ingress.typename = "SimpleIeee8021qFilter"
#*.tsnSwitch.bridging.streamFilter.ingress.numStreams = 2
#*.tsnSwitch.bridging.streamFilter.ingress.classifier.mapping = {video: 1,besteffort: 0}
#*.tsnSwitch.bridging.streamFilter.ingress.*[1].display-name = "video"
#*.tsnSwitch.bridging.streamFilter.ingress.*[0].display-name = "besteffort"
#*.tsnSwitch.bridging.streamFilter.ingress.meter[*].typename = "EligibilityTimeMeter"
#*.tsnSwitch.bridging.streamFilter.ingress.meter[*].committedInformationRate = 20Mbps
#*.tsnSwitch.bridging.streamFilter.ingress.meter[*].committedBurstSize = 10kB
#*.tsnSwitch.bridging.streamFilter.ingress.filter[*].typename = "EligibilityTimeFilter"
#
#
#
## enable egress traffic shaping
#*.tsnSwitch.hasEgressTrafficShaping = true
#*.tsnSwitch.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]
## credit-based and asynchronous traffic shaping
#*.tsnSwitch.eth[*].macLayer.queue.numTrafficClasses = 2
#*.tsnSwitch.eth[*].macLayer.queue.*[0].display-name = "besteffort"
#*.tsnSwitch.eth[*].macLayer.queue.*[1].display-name = "video"
#*.tsnSwitch.eth[*].macLayer.queue.queue[0].typename = "EligibilityTimeQueue"
#*.tsnSwitch.eth[*].macLayer.queue.queue[1].typename = "EligibilityTimeQueue"
#*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[0].typename = "Ieee8021qAsynchronousShaper"
##*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[0].idleSlope = 42.68Mbps
#*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].typename = "Ieee8021qAsynchronousShaper"
##*.tsnSwitch.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].idleSlope = 21.34Mbps
